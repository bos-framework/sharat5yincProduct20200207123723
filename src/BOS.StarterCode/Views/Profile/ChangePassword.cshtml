@using BOS.StarterCode.Helpers;

@model dynamic;

@{
    ViewData["Title"] = "Change Password";
}

<script type="text/javascript">
    var Model=@JavaScriptConvert.SerializeObject(Model);
    Model.Role =@(JavaScriptConvert.SerializeObject(User.FindFirst(c => c.Type == "Role").Value.ToString()));
    @{
        var UserRole = User.FindFirst(c => c.Type == "Role").Value.ToString();
        var IsUserAllowed = UserRole.Contains("Admin");
        var rolesList = UserRole.Split(',').ToList();
        var Operations = (Model != null && Model.Operations != null) ? Model.Operations : null ;
    }
</script>

<partial name="~/Views/Shared/Navigation/NavigationMenu.cshtml" />

<main class="page-content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <h1 class="mb-3">Change Password</h1>
                <hr />
            </div>
            <div class="col-md-12">
                <div class="row">
                    <div class="col-lg-6">
                        <form>
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label>
                                    Current Password <span style="color: red;">*</span>
                                </label>
                                <input type="password" id="currentPassword" class="form-control" placeholder="Enter Current Password" autocomplete="off" required />
                                <span id="spanCurrentPassword" style="color: red;"></span>
                            </div>
                            <div class="form-group position-relative">
                                <label>
                                    New Password <span style="color: red;">*</span>
                                </label>
                                <input type="password" id="newPassword" class="form-control" placeholder="Enter New Password" autocomplete="off" required />
                                <span id="spanNewPassword" style="color: red;"></span>
                                <table class="position-absolute" style="top: 17px;right: 5px;">
                                    <tbody>
                                        <tr>
                                            <td>
                                                <div id="meter_wrapper">
                                                    <div id="meter"></div>
                                                </div>
                                            </td>
                                            <td> <div id="pass_type"></div></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="form-group">
                                <label>
                                    Confirm New Password
                                </label>
                                <input type="password" id="confirmPassword" class="form-control" placeholder="Confirm Password" autocomplete="off" required />
                                <span id="spanConfirmassword" style="color: red;"></span>
                            </div>

                            @Html.ValidationMessage("CustomError")
                            <div class="form-group">
                                <input type="submit" value="Update" class="btn btn-primary btn-block" onclick="ChangePassword(); return false;" />
                            </div>
                        </form>
                        <div class="row">
                            <div class="col-md-12">
                                <a asp-action="Index">Back to My Profile</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


</main>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<style>
    .field-validation-error {
        color: red;
    }

    #meter_wrapper {
        margin-top: 20px;
        width: 200px;
        height: 15px;
        border-radius: 3px;
    }

    #meter {
        width: 0px;
        height: 15px;
        border-radius: 0;
    }

    #pass_type {
        font-size: 15px;
        margin-top: 20px;
        color: grey;
        margin-left: 10px;
    }
</style>

<script>
    $(document).ready(function () {
        $("#currentPassword").keyup(function () {
            if ($("#currentPassword")[0].value.length > 0) {
                $("#spanCurrentPassword")[0].innerHTML = '';
            }
        });

        $("#newPassword").keyup(function () {
            CheckPasswordStrength();
            if ($("#newPassword")[0].value.length > 0) {
                var isValid = IsPasswordValid($("#newPassword")[0].value);
                if (!isValid) {
                    $("#spanNewPassword")[0].innerHTML = "Passwords must be at least 8 characters and contain at least one upper case (A - Z), one lower case (a - z), one number(0 - 9) and an special character(e.g. !@@#$ %^&*)";
                }
                else {
                    $("#spanNewPassword")[0].innerHTML = "";
                }
            }
            else {
                $("#spanNewPassword")[0].innerHTML = "Required";
            }
        });

        $("#confirmPassword").keyup(function () {
            if ($("#newPassword")[0].value === $("#confirmPassword")[0].value) {
                $("#spanConfirmassword")[0].innerHTML = '';
            }
            else {
                $("#spanConfirmassword")[0].innerHTML = 'Passwords do not match';
            }
        });

    });
</script>
